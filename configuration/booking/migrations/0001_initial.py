# Generated by Django 5.2.7 on 2025-10-23 12:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organization', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BookingHotelDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in_date', models.DateField(blank=True, null=True)),
                ('check_out_date', models.DateField(blank=True, null=True)),
                ('number_of_nights', models.IntegerField(default=0)),
                ('room_type', models.CharField(blank=True, max_length=20, null=True)),
                ('price', models.FloatField(default=0)),
                ('quantity', models.FloatField(default=0)),
                ('total_price', models.FloatField(default=0)),
                ('riyal_rate', models.FloatField(default=0)),
                ('is_price_pkr', models.BooleanField(default=True)),
                ('contact_person_name', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_person_number', models.CharField(blank=True, max_length=20, null=True)),
                ('leg_no', models.PositiveIntegerField(default=1)),
                ('check_in_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='inactive', max_length=10)),
                ('check_out_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='inactive', max_length=10)),
                ('total_in_riyal_rate', models.FloatField(blank=True, null=True)),
                ('total_in_pkr', models.FloatField(blank=True, null=True)),
                ('hotel_brn', models.CharField(blank=True, max_length=100, null=True)),
                ('hotel_voucher_number', models.CharField(blank=True, max_length=100, null=True)),
                ('special_request', models.TextField(blank=True, null=True)),
                ('sharing_type', models.CharField(blank=True, max_length=50, null=True)),
                ('self_hotel_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookingPersonContactDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookingPersonDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_group', models.CharField(blank=True, max_length=20, null=True)),
                ('person_title', models.CharField(blank=True, max_length=10, null=True)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('passport_number', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('passpoet_issue_date', models.DateField(blank=True, null=True)),
                ('passport_expiry_date', models.DateField(blank=True, null=True)),
                ('passport_picture', models.ImageField(blank=True, null=True, upload_to='media/passport_pictures')),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('is_visa_included', models.BooleanField(default=False)),
                ('visa_price', models.FloatField(default=0)),
                ('is_family_head', models.BooleanField(default=False)),
                ('family_number', models.IntegerField(default=0)),
                ('visa_status', models.CharField(default='Pending', max_length=20)),
                ('ticket_status', models.CharField(default='Pending', max_length=20)),
                ('ticket_remarks', models.TextField(blank=True, null=True)),
                ('visa_group_number', models.CharField(blank=True, max_length=20, null=True)),
                ('visa_remarks', models.TextField(blank=True, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('this_pex_remarks', models.TextField(blank=True, null=True)),
                ('ticket_price', models.FloatField(default=0)),
                ('ticket_discount', models.FloatField(default=0)),
                ('is_visa_price_pkr', models.BooleanField(default=True)),
                ('visa_riyal_rate', models.FloatField(blank=True, default=0, null=True)),
                ('visa_rate', models.FloatField(blank=True, default=0, null=True)),
                ('visa_rate_in_sar', models.FloatField(blank=True, default=0, null=True)),
                ('visa_rate_in_pkr', models.FloatField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookingPersonFoodDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food', models.CharField(max_length=50)),
                ('price', models.FloatField(default=0)),
                ('is_price_pkr', models.BooleanField(default=True)),
                ('total_pax', models.IntegerField(default=0)),
                ('per_pax_price', models.FloatField(default=0)),
                ('total_price', models.FloatField(default=0)),
                ('total_price_in_pkr', models.FloatField(default=0)),
                ('price_in_sar', models.FloatField(default=0)),
                ('contact_person_name', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('food_voucher_number', models.CharField(blank=True, max_length=100, null=True)),
                ('food_brn', models.CharField(blank=True, max_length=100, null=True)),
                ('riyal_rate', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='BookingPersonZiyaratDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=50)),
                ('total_pax', models.IntegerField(default=0)),
                ('per_pax_price', models.FloatField(default=0)),
                ('total_price', models.FloatField(default=0)),
                ('total_price_in_pkr', models.FloatField(default=0)),
                ('price_in_sar', models.FloatField(default=0)),
                ('date', models.DateField()),
                ('price', models.FloatField(default=0)),
                ('contact_person_name', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('ziyarar_voucher_number', models.CharField(blank=True, max_length=100, null=True)),
                ('ziyarat_brn', models.CharField(blank=True, max_length=100, null=True)),
                ('is_price_pkr', models.BooleanField(default=True)),
                ('riyal_rate', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='BookingTicketDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_meal_included', models.BooleanField(default=False)),
                ('is_refundable', models.BooleanField(default=False)),
                ('pnr', models.CharField(max_length=100)),
                ('child_price', models.FloatField(default=0)),
                ('infant_price', models.FloatField(default=0)),
                ('adult_price', models.FloatField(default=0)),
                ('seats', models.IntegerField(default=0)),
                ('weight', models.FloatField(default=0)),
                ('pieces', models.IntegerField(default=0)),
                ('is_umrah_seat', models.BooleanField(default=False)),
                ('trip_type', models.CharField(max_length=50)),
                ('departure_stay_type', models.CharField(max_length=50)),
                ('return_stay_type', models.CharField(max_length=50)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookingTicketStopoverDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stopover_duration', models.CharField(max_length=100)),
                ('trip_type', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='BookingTicketTicketTripDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departure_date_time', models.DateTimeField()),
                ('arrival_date_time', models.DateTimeField()),
                ('trip_type', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='BookingTransportDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=0)),
                ('total_price', models.FloatField(default=0)),
                ('is_price_pkr', models.BooleanField(default=True)),
                ('riyal_rate', models.FloatField(default=0)),
                ('price_in_pkr', models.FloatField(default=0)),
                ('price_in_sar', models.FloatField(default=0)),
                ('voucher_no', models.CharField(blank=True, max_length=100, null=True)),
                ('brn_no', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookingTransportSector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector_no', models.IntegerField(default=0)),
                ('small_sector_id', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('contact_person_name', models.CharField(blank=True, max_length=100, null=True)),
                ('voucher_no', models.CharField(blank=True, max_length=100, null=True)),
                ('brn_no', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('things', models.CharField(choices=[('group_ticket', 'Group Ticket'), ('umrah_package', 'Umrah Package'), ('hotel', 'Hotel')], max_length=50)),
                ('group_ticket_discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('umrah_package_discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('currency', models.CharField(choices=[('PKR', 'PKR'), ('SAR', 'SAR')], default='PKR', max_length=10)),
                ('room_type', models.CharField(blank=True, choices=[('quint', 'Quint'), ('quad', 'Quad'), ('triple', 'Triple'), ('double', 'Double'), ('sharing', 'Sharing'), ('all', 'All Types')], max_length=50, null=True)),
                ('per_night_discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discounted_hotels', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DiscountGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='InternalNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.CharField(max_length=255)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('note', models.TextField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='internal_notes/')),
                ('working_status', models.CharField(choices=[('clear', 'Clear'), ('not_clear', 'Not Clear')], default='not_clear', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Markup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('applies_to', models.CharField(choices=[('group_ticket', 'Group Ticket'), ('hotel', 'Hotel'), ('umrah_package', 'Umrah Package')], max_length=20)),
                ('ticket_markup', models.FloatField(blank=True, default=0, null=True)),
                ('hotel_per_night_markup', models.FloatField(blank=True, default=0, null=True)),
                ('umrah_package_markup', models.FloatField(blank=True, default=0, null=True)),
                ('organization_id', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_id', models.IntegerField()),
                ('this_organization_request', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('main_organization_request', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('request_status', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(max_length=50)),
                ('amount', models.FloatField(default=0)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(default='Pending', max_length=20)),
                ('image', models.ImageField(blank=True, null=True, upload_to='media/payment_receipts')),
                ('transaction_number', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_name', models.CharField(max_length=100)),
                ('contact_number', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'small_sector',
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_name', models.CharField(max_length=100)),
                ('vehicle_type', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('note', models.TextField(blank=True, null=True)),
                ('visa_type', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10)),
            ],
            options={
                'db_table': 'vehicle_type',
            },
        ),
        migrations.CreateModel(
            name='AllowedReseller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allowed', models.JSONField(default=list)),
                ('requested_status_by_reseller', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('commission_group_id', models.IntegerField(blank=True, null=True)),
                ('markup_group_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reseller_companies', models.ManyToManyField(related_name='reseller_links', to='organization.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('account_title', models.CharField(blank=True, max_length=100, null=True)),
                ('account_number', models.TextField(blank=True, null=True)),
                ('iban', models.CharField(blank=True, max_length=50, null=True)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='organization.organization')),
            ],
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=255)),
                ('account_title', models.CharField(max_length=255)),
                ('account_number', models.CharField(max_length=50)),
                ('iban', models.CharField(max_length=34, unique=True)),
                ('status', models.CharField(blank=True, choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='organization.agency')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='organization.branch')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='organization.organization')),
            ],
        ),
        migrations.CreateModel(
            name='BigSector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='big_sectors', to='organization.organization')),
            ],
            options={
                'db_table': 'big_sector',
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selling_organization_id', models.IntegerField(blank=True, null=True)),
                ('owner_organization_id', models.IntegerField(blank=True, null=True)),
                ('booking_number', models.CharField(max_length=20)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('expiry_time', models.DateTimeField(blank=True, null=True)),
                ('total_pax', models.IntegerField(default=0)),
                ('total_adult', models.IntegerField(default=0)),
                ('total_infant', models.IntegerField(default=0)),
                ('total_child', models.IntegerField(default=0)),
                ('total_ticket_amount', models.FloatField(default=0)),
                ('total_hotel_amount', models.FloatField(default=0)),
                ('total_transport_amount', models.FloatField(default=0)),
                ('total_visa_amount', models.FloatField(default=0)),
                ('total_amount', models.FloatField(default=0)),
                ('total_hotel_amount_pkr', models.FloatField(blank=True, default=0, null=True)),
                ('total_hotel_amount_sar', models.FloatField(blank=True, default=0, null=True)),
                ('total_ziyarat_amount_pkr', models.FloatField(blank=True, default=0, null=True)),
                ('total_ziyarat_amount_sar', models.FloatField(blank=True, default=0, null=True)),
                ('total_food_amount_pkr', models.FloatField(blank=True, default=0, null=True)),
                ('total_food_amount_sar', models.FloatField(blank=True, default=0, null=True)),
                ('total_transport_amount_pkr', models.FloatField(blank=True, default=0, null=True)),
                ('total_transport_amount_sar', models.FloatField(blank=True, default=0, null=True)),
                ('total_visa_amount_pkr', models.FloatField(blank=True, default=0, null=True)),
                ('total_visa_amount_sar', models.FloatField(blank=True, default=0, null=True)),
                ('total_ticket_amount_pkr', models.FloatField(blank=True, default=0, null=True)),
                ('total_in_pkr', models.FloatField(blank=True, default=0, null=True)),
                ('paid_payment', models.FloatField(blank=True, default=0, null=True)),
                ('pending_payment', models.FloatField(blank=True, default=0, null=True)),
                ('call_status', models.BooleanField(default=False)),
                ('client_note', models.TextField(blank=True, null=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('status', models.CharField(max_length=20)),
                ('payment_status', models.CharField(default='Pending', max_length=20)),
                ('is_partial_payment_allowed', models.BooleanField(default=False)),
                ('category', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('action', models.CharField(blank=True, max_length=100, null=True)),
                ('rejected_notes', models.TextField(blank=True, null=True)),
                ('rejected_at', models.DateTimeField(blank=True, null=True)),
                ('is_visa_price_pkr', models.BooleanField(default=True)),
                ('visa_riyal_rate', models.FloatField(blank=True, default=0, null=True)),
                ('visa_rate', models.FloatField(blank=True, default=0, null=True)),
                ('visa_rate_in_sar', models.FloatField(blank=True, default=0, null=True)),
                ('visa_rate_in_pkr', models.FloatField(blank=True, default=0, null=True)),
                ('is_ziyarat_included', models.BooleanField(default=False)),
                ('is_food_included', models.BooleanField(default=False)),
                ('inventory_owner_organization_id', models.IntegerField(blank=True, null=True)),
                ('booking_organization_id', models.IntegerField(blank=True, null=True)),
                ('reseller_commission', models.FloatField(blank=True, default=0, null=True)),
                ('markup_by_reseller', models.FloatField(blank=True, default=0, null=True)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='organization.agency')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='organization.branch')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='confirmed_bookings', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='organization.organization')),
                ('rejected_employer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rejected_employer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
